Code Notes

java.codeup.com
  ds.codeup.com
  php.codeup.com

These are the links to book us for one on one meetings. Try to book meetings first with Terrell or your current instructors. Come prepared with your questions and (or) code!

  Terrell: https://app.hubspot.com/meetings/terrell4
  Justin: https://app.hubspot.com/meetings/justin105
  David: https://app.hubspot.com/meetings/david875
  Sophie: https://app.hubspot.com/meetings/sophie61
  Daniel: https://app.hubspot.com/meetings/daniel175
  Fernando: https://app.hubspot.com/meetings/fernando19

Pair up with your neighbor and take turns interviewing each other with the following questions:

  What draws you to coding and web development as a career?
  What are your greatest strengths? Weaknesses?
  How has your background helped prepare you for web development (technical and non-technical)?
  Describe your dream job in web development.
  What technologies interest you, web development/coding-related, and otherwise?
  What blogs and other news sites do you go to to get the latest info on technology?

PB&J SANDWICH
  Group into teams of three-four.
  Over the next 15 minutes, write out all the steps it would take to make a peanut butter and jelly sandwich from scratch.
  Each instruction should be short and simple enough for a five year-old to understand.
  Group every 4-8 instructions in a named block (paragraph), relating to one main concern.
  Aim for 20+ instructions  

What is concatenation?
  What are some significant characteristics of the JavaScript language?
    High Level language
    Loosely typed 
    Language of the web
    Written in 90s, for netscape navigator by Co-Founder of Mozilla
  What is the difference between =, ==, and ===?
    =    Assignment Operator
    ==   Equal in value
    ===  Equal in type and value
  What version of JavaScript are we currently learning in class?
    ES5 Currently
  What are the JavaScript primative data types mentioned so far?
    Numbers
    Strings
    Booleans
  What are some ways to convert a numeric string into a number and vice versa?
    ParseInt() and "#" + ""
    num.toString()
  What is an example of an 'overloaded operator'?
    It's an operator that can do two operations. 
      str1 * str2 = [product, if both are string of numbers]
  How are JavaScript strings immutable?
    using const to declare variable
  What is a JS expression?
    multiple values that lead to one value
  What is a JS statement?
    JavaScript statements are composed of Values, Operators, Expressions, Keywords, and Comments.
  Can multiple values be stored in a variable?

MVP - Minium Viaable Product
Brendan Eich, founded javascript and co-founded Mozilla.
ECMA - European Computer Manufacturers Association
this().is().method().chaining();

Good interview examples: 
  Sophies html/css/js analogy
    HTML is the structure of the house. 
    CSS is the design of the house (color of walls, where furniture is placed)
    Javascript is what you can do in the house (open windows, close doors)

  Ryans boolean expression
    I am either on the moon, or I am in front of you. 

Mac
  shift+LArrow/RArrow - Highlights individual character
  shift+option - Highlights words
  BetterSnapTool - Snap windows to parts of the screen (like on windows).

Chrome
  cmd+shift+r (chrome) - Refreshes page and updates cache

Terminal
  rm -rf - Removes directories and files without prompt
  Customize Terminal - https://www.maketecheasier.com/remove-user-hostname-terminal-prompt/
  Append file
    echo 'stuff to add to text file' >> [filename]

GIT
  Commands for gitCLI
    https://guides.github.com/introduction/git-handbook/#basic-git
    http://git-scm.com/documentation
  VCS - Version Control System
  Repository - Folder that we designated for git.
  Commits - Snapshots of time.
  Should push your work twice a day. Once at the end of the morning and once at the end of the day. 
    In real world, commit after making a small feature. Then commit to branch.

  check git username and email
    git config --get user.name
    git config --get user.email
  Set the global configuration if needed
    git config --global user.name "Yael Brown"
    git config --global user.email email@email.com

  init a git repository in current directory
      git init
    add files into staging area
      git add
    check status of files
      git status
    remove files from cached
      git rm --cached
    remove files from staged
      git rm --cached [filename.file]
    show log of changes
      git log
    write commit message
      git commit -m "My commit message"
    add url to github
      git remote add origin https://url/repository.git
    push changes to github
    git push -u origin master

  Create Organization (for pair programming)
    + [on top right]
    New Organization
    Create name
    For personal
    Free version
    add billing email
    press create organization
    add user to organization
      invite member
      search and select username
      press invite
    change role
      people
      gear [to the right]
      change role
      owner

  Create a new branch
      git branch [branch name]
    Switch branches
      git checkout [branch Name]
      git checkout -b [branch name] (creates branch and switches to it)
    Show list of branches
      git branch
    merge branch with master
      git merge [branch name]

  Pull Request

  Hide keys on gh - (dont need to export or import, variable is created in global scope)
    add keys.js to .gitignore
    create variable and add token to the variable
    use script tags and include the keys file. (html style)
    use the variable name created in first step in location of where the key originally was

  show list of commits
    git log

IntelliJ
  cmd+shfit+a - spotlight for intellij
  cmd+option+t - brings up menu, 'surround with tag'
  cmd+option+L - Auto refactor code

HTML
  HTML - Provides Structure for Website
  Semantics is the study of the meanings of words and phrases in a language.
  Semantic elements = elements with a meaning.
    Examples: <form>, <table>, and <article>
    Non-Examples: <div> and <span>
  Void elements are self closing tags
    <br/>, <hr/>, <img/>
  Request inspector
    https://request-inspector.glitch.me/

CSS
  BOM - Box Object Model
  has a selector and a declaration.
    declarations use key value pairs.
  top, right, bottom, left
    positive values push, negative values pull.
  Flexbox is good for one-demensional layouts
    like in a navbar
  CSS Grid is better optimized when you want to have two-demensional layouts. 
  Foundation was an old css layout
  Grid-Area { [Row-start], [column-start], [row-end], [column-end]}
  CSS Grid is the most efficient way to produce a layout

JS
  cmd+option+j - Opens developer console.
  type cohersion - When you take one data type and convert it to another
    no type cohersion on boolean values
    convert to num
      +"2" = declares a string into a number
      number("2")
      parseInt("2")
      parseFloat("2")
    convert to string
      num.toString();
      4 + ""
  double quotes can be nested into single quotes.
  3 '\' will not output a string. (if wrapped in string)
    if you want to use 2 \'s you have to use 4 \'s.\
    ... or just use double quotes
  modulus - the 'remainder' operator
  double not (!!) - is used to invert boolean
  Order of operations for comparison operators:
    NOT 
    AND 
    OR
  ==  - is a conhersion, can convert data types
  === - is a strict operator also compares value and data type.
  != - is a comparison operator (not recommended to use) 'not equal to'
    2 != 2 // false, 2 is equal to 2 (TRUE), inverted because NOT. (FALSE)
  'typeof [primitive datatype]' - will display the type of data type. Does not have to be in function.
    Does not work in Node.
  "var = x, y, z" // declare multiple variables
  do not have to use var to create variable
    cannot create a variable that starts with a number
  post and pre increment operator
    post - increment is after the var (i++)
    pre - increment is before the var (++i)
  NaN === NaN // false, 'is this unknown value equal to this unknown value'
    isNaN() - Is this value 'not a number' ?
    isNaN(undefined + undefined) // true
    isNaN("2") // true, can be converted to a number so will be true
    isNaN("1234fasdfsdf") // true
  Name of strings, difference between litteral and variable
    "str" = string litteral
    str = variable
  Everything in Javascript is an object. 
    String is primitive type and converted to object at runtime. 
  str.toFixed(2) adds ".00" at the end of numeric string.
  Functions
    functions are like paragraphs. 
    group of instructions.
    way of containing one or more statements
    called first class citizens in javascript
    Parameter - is what will be passed into the function
    Argument - Value that is passed into the function, and treated how parameter of the function is used. 
    leave off parenthesis you are referring to the original definition of the function
      var dogSound = bark;    // Assigning the definition of the function
      var sound = bark();    // Assigning the value of the function
    Function declaration syntax - The normal way of defining functions
      function bark() { }
    Anonymous Function - function defined without a name.
      var bark = function() { };
      (function () { [code] })();
    IIFE - function that has a anonymous function wrapped in parenthesis and is immediately called
  Conditionals
    Ternary operator - more efficient
      var [varName] = (condition) ? [true action] : [else action];
    Switch statements
      can just do return, instead of adding break statements
      no agreed upon solution for best practice.
  Loops
    A way to repeat logic
      While Loop - Will run while a condition is true
      Do-While - Will run at least once, but same as while loop.
      For Loops - Designed to run a given number of times. 
        for (incrementor; condition; increment) { ...
        can use letters in a string to run a for loop.
    Can break from or skip loops through loops
      break - exits the loop goes to continuing code. Break you out of the loop.
      continue - skips the code under when condition is true but continues the loop. Will continue to run loop.
    for of loops - Loop through values
    for in loops - Loop through property names
  Arrays
    forEach loops are specific to arrays. 
      [arrName].forEach (function(element, index, array){
        [code]
      });
      Order is mandatory, Name is not for attributes of anonymous function.
  Object
    Method is a function associated with object.
    Attribute is a property associated with object.
  DOM
    Objects using getElementByClassName are added to an node list. An Nodelist is like an array list but its not an array. 
    Can use similar methods with nodelist as you would array. 




extra study
  setInterval
  setTimeout






